API Code Sharing 
This is complete guideline and code of developing API Of Chat Applications Hvaing Two DB tables 
The code is meticulously organized, documented, and optimized for easy integration and usage.
Developers can explore, contribute, and collaborate on this open-source project, fostering 
a community of innovation and continuous improvement in API development. Whether you're 
looking to integrate this API into your projects or enhance its functionality,
this repository provides a comprehensive foundation to kickstart your journey.

Lets divide developments of Api in Steps:
1st : Create Project 
2nd : Create App Project 
3rd : Write Functions in models.py of App
model.py
from django.db import models

class ChatRoom(models.Model):
    name = models.CharField(max_length=255)

    def __str__(self):
        return self.name

class Message(models.Model):
    chat_room = models.ForeignKey(ChatRoom, on_delete=models.CASCADE)
    sender = models.CharField(max_length=255)
    content = models.TextField()
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.sender} - {self.content}"
4th : Now Create Serializer.py File in APP and write code 
serializers.py
from rest_framework import serializers
from .models import ChatRoom, Message

class MessageSerializer(serializers.ModelSerializer):
    class Meta:
        model = Message
        fields = '__all__'

class ChatRoomSerializer(serializers.ModelSerializer):
    class Meta:
        model = ChatRoom
        fields = '__all__'
5th : add functions in views.py of app
Views.py 
from rest_framework import viewsets
from .models import ChatRoom, Message
from .serializers import ChatRoomSerializer, MessageSerializer

class ChatRoomViewSet(viewsets.ModelViewSet):
    queryset = ChatRoom.objects.all()
    serializer_class = ChatRoomSerializer

class MessageViewSet(viewsets.ModelViewSet):
    queryset = Message.objects.all()
    serializer_class = MessageSerializer
6th  : Add Url to APP first create urls.py
Urls.py 
from django.urls import path, include
from rest_framework.routers import DefaultRouter
from .views import ChatRoomViewSet, MessageViewSet

router = DefaultRouter()
router.register(r'chat-rooms', ChatRoomViewSet)
router.register(r'messages', MessageViewSet)

urlpatterns = [
    path('', include(router.urls)),
]
7th : Now ADD Projects Urls 
urls.py from django.views.generic import TemplateView
from django.urls import path

urlpatterns = [
    path('', TemplateView.as_view(template_name='index.html'), name='index'),
    # other URLs
]
In the Very Last Steps 
*add app name in installed app
*add tempelates in app along with there settings in setting.py
*add rest_framework in setting.py along with thier functions
*dont forget to makemigrations and migrate models 
*and runserver and enjoy the code
